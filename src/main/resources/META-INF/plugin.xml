<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin require-restart="false">

  <id>dev.mcp.extensions.lsp</id>
  <name>MCP Language Service Tools</name>


  <vendor url="https://github.com/justin1291">Justin Gooley</vendor>

  <description><![CDATA[
    Advanced language service tools for the JetBrains MCP Server, providing IDE-level code intelligence to AI assistants.
    
    <h3>üöÄ Multi-Language Architecture</h3>
    <p>Built with an extensible architecture that makes adding new language support trivial. Currently supports JVM languages. Python support is in alpha, with more languages planned.</p>
    </p>
    
    <h3>‚ú® Key Features</h3>
    <ul>
      <li><b>Smart Symbol Extraction</b> - Get all symbols from files with rich metadata (deprecation, JavaDoc, visibility, annotations)</li>
      <li><b>Precise Navigation</b> - Find symbol definitions with confidence scoring and disambiguation</li>
      <li><b>Intelligent Usage Analysis</b> - Find all references with categorization and insights</li>
      <li><b>Rich Type Information</b> - Get hover info including documentation, type hierarchies, and usage counts</li>
    </ul>
    
    <h3>üõ†Ô∏è MCP Tools Provided</h3>
    <ul>
      <li><b>get_symbols_in_file</b> - Extract symbols with metadata (flat/hierarchical, filtering, offset positions)</li>
      <li><b>find_symbol_definition</b> - Navigate to definitions (name/position-based, confidence scoring)</li>
      <li><b>find_symbol_references</b> - Find usages with insights (grouped by type, data flow context)</li>
      <li><b>get_hover_info</b> - Get documentation and type info (JavaDoc, complexity, usage counts)</li>
    </ul>
    
    <h3>üéØ Benefits</h3>
    <ul>
      <li>Enable AI assistants to understand code relationships and dependencies</li>
      <li>Make safe refactoring decisions with complete usage analysis</li>
      <li>Navigate large codebases efficiently with IDE-level intelligence</li>
      <li>Get accurate type information without parsing code manually</li>
    </ul>
    
    <p><b>Perfect for:</b> AI-assisted development, code analysis, refactoring, and documentation generation.</p>
  ]]></description>


  <depends>com.intellij.modules.platform</depends>
  <depends>com.intellij.mcpServer</depends>

  <depends config-file="mcp-lsp-java.xml">com.intellij.modules.java</depends>
  <depends optional="true" config-file="mcp-lsp-python.xml">com.intellij.modules.python</depends>
  <depends optional="true" config-file="mcp-lsp-javascript.xml">JavaScript</depends>

  <extensions defaultExtensionNs="com.intellij.mcpServer">
    <mcpTool implementation="dev.mcp.extensions.lsp.tools.GetSymbolsInFileTool"/>
    <mcpTool implementation="dev.mcp.extensions.lsp.tools.FindSymbolDefinitionTool"/>
    <mcpTool implementation="dev.mcp.extensions.lsp.tools.FindSymbolReferencesTool"/>
    <mcpTool implementation="dev.mcp.extensions.lsp.tools.GetHoverInfoTool"/>
  </extensions>
</idea-plugin>
